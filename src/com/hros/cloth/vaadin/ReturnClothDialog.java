package com.hros.cloth.vaadin;

import com.hros.cloth.dao.ClothDao;
import com.hros.cloth.domain.Cloth;
import com.hros.cloth.service.ClothService;
import com.hros.vaadin.SpringContextHelper;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Window;
import com.vaadin.ui.Window.Notification;

public class ReturnClothDialog extends CustomComponent implements Button.ClickListener{

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_1;
	@AutoGenerated
	private Button button_cancel;
	@AutoGenerated
	private Button button_ok;
	@AutoGenerated
	private TextArea textArea_reason;
	@AutoGenerated
	private TextField textField_count;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	
	private ClothDao clothDao;
	private ClothService clothService;
	private Cloth selectedCloth;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public ReturnClothDialog() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		button_ok.addListener(this);
		button_cancel.addListener(this);
	}
	
	@Override
	public void attach(){
		super.attach();
		SpringContextHelper help = new SpringContextHelper(this.getApplication());
		clothService = (ClothService)help.getBean("clothServiceImpl");
		
		
	}
	
	
	@Override
	public void buttonClick(ClickEvent event) {
		if(event.getSource().equals(button_cancel)){
			closeWindow();
		}
		if(event.getSource().equals(button_ok)){
			int count = Integer.valueOf(textField_count.getValue().toString());
			if(count > selectedCloth.getCount()){
				getWindow().showNotification("你输入的退货数:"+count+"已超过库存数:"+selectedCloth.getCount(), "错误",Notification.TYPE_ERROR_MESSAGE);
				return;
			} 
			clothService.returnCloth(selectedCloth, count, textArea_reason.getValue().toString());
			getWindow().getParent().showNotification("退货成功","提示",Notification.TYPE_HUMANIZED_MESSAGE);
			closeWindow();
		}
	}
	
	private void closeWindow(){
		Window window = (Window)this.getWindow();
		window.getParent().removeWindow(window);
	}
	
	public void setCloth(Cloth cloth){
		this.selectedCloth = cloth;
		textField_count.setValue(cloth.getCount());
	}
	
	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// textField_count
		textField_count = new TextField();
		textField_count.setCaption("请输入退货的数量");
		textField_count.setImmediate(false);
		textField_count.setWidth("-1px");
		textField_count.setHeight("-1px");
		textField_count.setSecret(false);
		mainLayout.addComponent(textField_count);
		
		// textArea_reason
		textArea_reason = new TextArea();
		textArea_reason.setCaption("请输入退货缘由");
		textArea_reason.setImmediate(false);
		textArea_reason.setWidth("-1px");
		textArea_reason.setHeight("-1px");
		mainLayout.addComponent(textArea_reason);
		
		// horizontalLayout_1
		horizontalLayout_1 = buildHorizontalLayout_1();
		mainLayout.addComponent(horizontalLayout_1);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("-1px");
		horizontalLayout_1.setHeight("-1px");
		horizontalLayout_1.setMargin(false);
		
		// button_ok
		button_ok = new Button();
		button_ok.setCaption("确定");
		button_ok.setImmediate(true);
		button_ok.setWidth("-1px");
		button_ok.setHeight("-1px");
		horizontalLayout_1.addComponent(button_ok);
		
		// button_cancel
		button_cancel = new Button();
		button_cancel.setCaption("取消");
		button_cancel.setImmediate(true);
		button_cancel.setWidth("-1px");
		button_cancel.setHeight("-1px");
		horizontalLayout_1.addComponent(button_cancel);
		
		return horizontalLayout_1;
	}

}
